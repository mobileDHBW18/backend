service: cantinr

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  stage: dev
  runtime: nodejs6.10
  region: eu-central-1
  environment:
    DYNAMODB_TABLE_MEALS: ${self:service}-${opt:stage, self:provider.stage}-meals
    DYNAMODB_TABLE_MENSA: ${self:service}-${opt:stage, self:provider.stage}-mensa
    S3_BUCKET_PHOTOS: ${self:service}-${opt:stage, self:provider.stage}-photos

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        # - dynamodb:DeleteItem # not needed right now
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_MEALS}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_MENSA}"

    - Effect: Allow # THIS IS NOT A GOOD IDEA
      Action:
        - s3:* # NOT AT ALL
      Resource: "*" # DON'T DO THIS

package:
  exclude:
    - node_modules/**
    
functions:
############################ MENSA ############################
  mensa-create:
    handler: mensa/create.create
    events:
      - http:
          path: mensa
          method: put
          cors: true

  mensa-list:
    handler: mensa/list.list
    events:
      - http:
          path: mensa
          method: get
          cors: true

  mensa-get:
    handler: mensa/get.get
    events:
      - http:
          path: mensa/{id}
          method: get
          cors: true
###############################################################

############################ MEALS ############################
  meals-create:
    handler: meals/create.create
    events:
      - http:
          path: meals
          method: put
          cors: true

  meals-list:
    handler: meals/list.list
    events:
      - http:
          path: meals
          method: get
          cors: true

  meals-get:
    handler: meals/get.get
    events:
      - http:
          path: meals/{id}
          method: get
          cors: true

  meals-rate:
    handler: meals/update.rate
    events:
      - http:
          path: meals/{id}
          method: post
          cors: true

  meals-scrape:
    handler: meals/scraper.scrape
    events:
      - schedule: cron(0 10 ? * MON-FRI *)
    package:
      individually: true

  photoprocess:
    handler: meals/photo.postprocess
    events:
      - s3: photos
###############################################################

resources:
  Resources:

    MealsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_MEALS}

    MensaDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE_MENSA}

    S3BucketPhotos:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET_PHOTOS}
        AccessControl: PublicReadWrite # NOT A GOOD IDEA
    PhotoprocessLambdaPermissionPhotosS3:
      Type: "AWS::Lambda::Permission"
      Properties:
        FunctionName:
          "Fn::GetAtt":
            - PhotoprocessLambdaFunction
            - Arn
        Principal: "s3.amazonaws.com"
        Action: "lambda:InvokeFunction"
        SourceAccount:
          Ref: AWS::AccountId
        SourceArn: "arn:aws:s3:::${self:provider.environment.S3_BUCKET_PHOTOS}"



